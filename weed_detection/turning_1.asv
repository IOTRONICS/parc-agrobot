function turning_1()

    % Define ROS publisher and message for robot movement
    robot_cmd_pub = rospublisher('/cmd_vel', 'geometry_msgs/Twist');
    robot_cmd_msg = rosmessage(robot_cmd_pub);

    % Set the desired linear velocity for straight movement (0.2 m/s)
    linear_velocity = 0.2;

    % Set the desired angular velocity for turning (90 degrees/sec, clockwise direction)
    angular_velocity = deg2rad(-90); % Convert -90 degrees to radians

    % Set the duration for each movement (2 seconds)
    movement_duration = 2; % 2 seconds

    while true
        % Capture an image using the camera (you need to implement this function)
        image = captureImage();

        % Check if the robot sees red (you need to implement this function)
        if seesRed(image)
            % Robot sees red, continue turning
            turning(robot_cmd_msg, angular_velocity, movement_duration);
        else
            % Robot doesn't see red, stop and make a straight movement for 2 seconds
            robot_cmd_msg.Linear.X = 0;
            robot_cmd_msg.Angular.Z = 0;
            send(robot_cmd_pub, robot_cmd_msg);
            pause(movement_duration);

            % Turn 90 degrees in a clockwise direction
            turning(robot_cmd_msg, angular_velocity, movement_duration);

            % Make another straight movement for 2 seconds
            robot_cmd_msg.Linear.X = linear_velocity;
            send(robot_cmd_pub, robot_cmd_msg);
            pause(movement_duration);
            robot_cmd_msg.Linear.X = 0;
            send(robot_cmd_pub, robot_cmd_msg);

            % Turn 90 degrees in a clockwise direction
            turning(robot_cmd_msg, angular_velocity, movement_duration);
        end
    end

    % Shutdown ROS
    rosshutdown;
end

% Implement the rest of the functions as before...
